// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Poco;

namespace Model.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220218001021_CorrecaoNomeId2")]
    partial class CorrecaoNomeId2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Poco.Accountable", b =>
                {
                    b.Property<int>("AccountableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ResponsavelId")
                        .HasColumnType("int")
                        .HasComment("Chave primaria auto incremente")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("DataNascimento")
                        .HasColumnType("DATE")
                        .HasComment("Data de nascimento do aluno");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("Email do aluno, obrigatório")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Kinship")
                        .HasColumnName("Parentesco")
                        .HasColumnType("varchar(25)")
                        .HasComment("Parentesco do responsável do aluno")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(100)")
                        .HasComment("Nome do responsável")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("StundentId")
                        .HasColumnName("AlunoId")
                        .HasColumnType("int")
                        .HasComment("Chave estrangeira do aluno");

                    b.Property<string>("Telephone")
                        .HasColumnName("Telefone")
                        .HasColumnType("varchar(13)")
                        .HasComment("Telefone do responsável")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.HasKey("AccountableId");

                    b.HasIndex("StundentId");

                    b.ToTable("Responsavel");
                });

            modelBuilder.Entity("Model.Poco.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AlunoId")
                        .HasColumnType("int")
                        .HasComment("Chave Primaria auto incremente")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("DataNascimento")
                        .HasColumnType("DATE")
                        .HasComment("Data de Nascimento do aluno");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(60)")
                        .HasComment("Email do aluno")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(100)")
                        .HasComment("Nome do aluno")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnName("ImagemPerfil")
                        .HasColumnType("varbinary(max)")
                        .HasComment("Imagem de perfil do aluno");

                    b.Property<string>("Segment")
                        .HasColumnName("Segmento")
                        .HasColumnType("varchar(35)")
                        .HasComment("Segmento do aluno, infantil ou médio")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.HasKey("StudentId");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("Model.Poco.Accountable", b =>
                {
                    b.HasOne("Model.Poco.Student", "Student")
                        .WithMany("Accountable")
                        .HasForeignKey("StundentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
